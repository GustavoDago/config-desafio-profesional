server:
  port: 8082
spring:
  application:
    name: user-service
  datasource:
    url: jdbc:mysql://localhost:3306/digitalmoneyhouse
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: digital
  jpa:
    hibernate.ddl-auto: update
    generate-ddl: true
    show-sql: true
  zipkin:
    base-url: http://localhost:9411/
  rabbitmq:
    username: guest
    password: guest
    host: localhost
    port: 5672
  security:
    oauth2:
      client:
        registration:
          ms-user:
            client-id: msUser-client
            client-secret: jTwW8JAffl9RVHjTQiY6ukb93ZqIF1wZ
            authorization-grant-type: client_credentials
        provider:
          ms-user:
            token-uri: http://localhost:8080/realms/digitalmoneyhouse/protocol/openid-connect/token
        resourceserver:
          jwt:
            #issuer-uri: http://${KEYCLOAK_HOST:localhost}:${KEYCLOAK_PORT:8080}/realms/${KEYCLOAK_REALM:digitalmoneyhouse}
            issuer-uri: http://keycloak:${KEYCLOAK_PORT:8080}/realms/${KEYCLOAK_REALM:digitalmoneyhouse}
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:hairphoriastore@gmail.com}
    password: ${MAIL_PASSWORD:ywwidqyyvhvaortv}
    link:
      #verify: http://localhost:8090/users/verify
      verify: http://gateway:8090/users/verify
    mail-template: ValidationEmail
    mail-subject: "Validación de cuenta"
    redirects:
      success-verification: http://127.0.0.1:5173/verificacion-exitosa
      already-verification: https://th.bing.com/th/id/OIP.MZZQpcPj-bjfN2bKPSjcDQHaEl?rs=1&pid=ImgDetMain
      error-verification: https://verification.swiftchat.ai/images/email_not_verified.png
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

keycloak:
  realm: digitalmoneyhouse
  #serverUrl: http://${KEYCLOK_HOST:localhost}:${KEYCLOK_PORT:8080}
  serverUrl: http://keycloak:8080
  clientId: users-service


queue: # llave de configuración para conocer cómo se llama la cola
  movie:
    name: ColaUsuarios
    
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    healthcheck:
      enabled: true
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        
logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.session: DEBUG
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.security.web.csrf: DEBUG
    org.springframework.security.web.authentication.rememberme: DEBUG